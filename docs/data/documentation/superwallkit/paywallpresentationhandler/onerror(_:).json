{"metadata":{"externalID":"c:@M@SuperwallKit@objc(cs)SWKPaywallPresentationHandler(im)onError:","title":"onError(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onError"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"SuperwallKit"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onError","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"platforms":["iOS"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"A block that accepts an "},{"code":"Error","type":"codeVoice"},{"type":"text","text":" indicating why the paywall"},{"text":" ","type":"text"},{"type":"text","text":"could not present."}],"type":"paragraph"}]}]}],"variants":[{"paths":["\/documentation\/superwallkit\/paywallpresentationhandler\/onerror(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Sets the handler that will be called when an error occurred while trying to present a paywall."}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/PaywallPresentationHandler\/onError(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SuperwallKit\/documentation\/SuperwallKit","doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/PaywallPresentationHandler"]]},"references":{"doc://SuperwallKit/documentation/SuperwallKit/PaywallPresentationHandler/onError(_:)":{"abstract":[{"type":"text","text":"Sets the handler that will be called when an error occurred while trying to present a paywall."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onError","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic","title":"onError(_:)","url":"\/documentation\/superwallkit\/paywallpresentationhandler\/onerror(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/PaywallPresentationHandler\/onError(_:)"},"doc://SuperwallKit/documentation/SuperwallKit/Superwall/register(event:params:handler:feature:)":{"abstract":[{"type":"text","text":"Registers an event to access a feature. When the event is added to a campaign on the Superwall dashboard, it can show a paywall."}],"identifier":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/Superwall\/register(event:params:handler:feature:)","kind":"symbol","title":"register(event:params:handler:feature:)","role":"symbol","url":"\/documentation\/superwallkit\/superwall\/register(event:params:handler:feature:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"params"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"]?, ","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@SuperwallKit@objc(cs)SWKPaywallPresentationHandler","text":"PaywallPresentationHandler","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"feature","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}]},"doc://SuperwallKit/documentation/SuperwallKit/PaywallPresentationHandler":{"identifier":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/PaywallPresentationHandler","role":"symbol","title":"PaywallPresentationHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PaywallPresentationHandler","kind":"identifier"}],"abstract":[{"text":"The handler for ","type":"text"},{"type":"reference","identifier":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit\/Superwall\/register(event:params:handler:feature:)","isActive":true},{"text":" whose","type":"text"},{"type":"text","text":" "},{"type":"text","text":"functions provide status updates for a paywall."}],"navigatorTitle":[{"text":"PaywallPresentationHandler","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/superwallkit\/paywallpresentationhandler"},"doc://SuperwallKit/documentation/SuperwallKit":{"role":"collection","abstract":[{"text":"The client SDK for ","type":"text"},{"identifier":"https:\/\/superwall.com","type":"reference","isActive":true},{"text":", a service that lets you remotely configure, present and iterate paywalls – helping you find winners quickly.","type":"text"}],"identifier":"doc:\/\/SuperwallKit\/documentation\/SuperwallKit","url":"\/documentation\/superwallkit","type":"topic","kind":"symbol","title":"SuperwallKit"},"https://superwall.com":{"url":"https:\/\/superwall.com","identifier":"https:\/\/superwall.com","title":"Superwall","titleInlineContent":[{"type":"text","text":"Superwall"}],"type":"link"}}}